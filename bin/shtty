#!/usr/bin/env bash
set -e

ROOT_PASSWORD=root
USER_PASSWORD=user
USER="${USER:-$(whoami)}"
USER_ID=$(id -u $USER)

if [ "$1" = '--pull' ]; then
    DOCKER_PULL=1
    shift
fi

DOCKER_IMAGE=$1
shift

if [ -z $DOCKER_IMAGE ]; then
    echo error: missing image argument
    exit 1
fi

if [ -n "$DOCKER_PULL" ]; then
    docker pull "${DOCKER_IMAGE}" > /dev/null
fi

# ugh - Docker for Mac does not expose mktemp's default folder by default
TEMP_DIR=$(mktemp -d /tmp/shtty.XXXXXXXXX)

cat > $TEMP_DIR/entrypoint.sh<<_EOF
#!/usr/bin/env sh
if [ -x "\$(command -v useradd)" ]; then
    useradd -M -d $HOME -u $USER_ID $USER -s \$(getent passwd root | cut -d: -f7)
else
    adduser -u $USER_ID -h $HOME -H $USER -D -s \$(getent passwd root | cut -d: -f7)
fi

if [ -x "\$(command -v busybox)" ]; then
    chmod u+s /bin/busybox
fi
echo "root:$ROOT_PASSWORD" | chpasswd >& /dev/null
echo "$USER:$USER_PASSWORD" | chpasswd >& /dev/null
if [ $# -eq 0 ]; then
    exec su $USER
else
    # magical...
    C=''
    for i in "\$@"; do
        case "\$i" in
            *\'*)
                i=\$(printf "%s" "\$i" | sed "s/'/'\"'\"'/g")
                ;;
            *) : ;;
        esac
        C="\$C '\$i'"
    done
    exec su $USER -c "\$C"
fi
_EOF
chmod +x $TEMP_DIR/entrypoint.sh

container_name="shtty-$(uuidgen | tr -d -)"
trap "rm -rf "$TEMP_DIR"; docker kill "$container_name" >& /dev/null || true" SIGHUP EXIT
docker run \
    --rm \
    -it \
    --name "${container_name}" \
    -v "$HOME:$HOME" \
    -v "$TEMP_DIR:/tmp/shtty" \
    -w "$PWD" \
    --entrypoint /tmp/shtty/entrypoint.sh \
    --net=host \
    --user root \
    $DOCKER_IMAGE "$@"

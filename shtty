#!/usr/bin/env sh
set -e

ROOT_PASSWORD=root
USER_PASSWORD=user
USER="${USER:-$(whoami)}"
USER_ID="$(id -u $USER)"

show_usage() {
    cat <<EOF
Usage:  shtty [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container as your user, with your home,
and in your current working directory.
EOF
}

show_help() {
    show_usage
    echo
    cat <<EOF
Options:
      --help                           Print usage
      --pull                           Pull the image before running
EOF
    exit
}

missing_argument() {
    cat >&2 <<EOF
"shtty" requires at least 1 argument.
See 'shtty --help'.
EOF
    echo >&2
    show_usage >&2
    exit 1
}

if [ $# = 0 ]; then
    missing_argument
fi

if [ "$1" = '--help' ]; then
    show_help
    exit
fi

if [ "$1" = '--pull' ]; then
    DOCKER_PULL=1
    shift
fi

DOCKER_IMAGE=$1

if [ -z "$DOCKER_IMAGE" ]; then
    missing_argument
fi

shift

if [ -n "$DOCKER_PULL" ]; then
    docker pull "${DOCKER_IMAGE}" > /dev/null
fi

# ugh - Docker for Mac does not expose mktemp's default folder by default
TEMP_DIR="$(mktemp -d /tmp/shtty.XXXXXXXXX)"

cat > "$TEMP_DIR/entrypoint.sh"<<_EOF
#!/usr/bin/env sh
if [ -x "\$(command -v useradd)" ]; then
    useradd -M -d "$HOME" -u "$USER_ID" "$USER" -s \$(getent passwd root | cut -d: -f7)
else
    adduser -u "$USER_ID" -h "$HOME" -H "$USER" -D -s \$(getent passwd root | cut -d: -f7)
fi

if [ -x "\$(command -v busybox)" ]; then
    chmod u+s /bin/busybox
fi
echo "root:$ROOT_PASSWORD" | chpasswd  2> /dev/null 1> /dev/null
echo "$USER:$USER_PASSWORD" | chpasswd  2> /dev/null 1> /dev/null
if [ $# -eq 0 ]; then
    exec su "$USER"
else
    # magical...
    C=''
    for i in "\$@"; do
        case "\$i" in
            *\'*)
                i=\$(printf "%s" "\$i" | sed "s/'/'\"'\"'/g")
                ;;
            *) : ;;
        esac
        C="\$C '\$i'"
    done
    exec su "$USER" -c "\$C"
fi
_EOF
chmod +x "$TEMP_DIR/entrypoint.sh"

container_name="shtty-$(cat /dev/urandom | LC_ALL=C tr -cd 'a-f0-9' | head -c 32)"
trap "rm -rf "$TEMP_DIR"; docker kill "$container_name" > /dev/null 2>&1; true" HUP EXIT
if [ -t 0 -a -t 1 -a -t 2 ]; then
    tty_flag='-t'
fi
docker run \
    --rm \
    -i \
    $tty_flag \
    --name "${container_name}" \
    -v "$HOME:$HOME" \
    -v "$TEMP_DIR:/tmp/shtty" \
    -w "$PWD" \
    --entrypoint /tmp/shtty/entrypoint.sh \
    --net=host \
    --user root \
    "$DOCKER_IMAGE" "$@"
